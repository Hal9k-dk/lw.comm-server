{
  "name": "lw.comm-server",
  "version": "4.0.138",
  "license": "AGPL-3.0",
  "description": "Unified communications server for LaserWeb/CNCweb",
  "author": "github.com/LaserWeb",
  "contributors": [
    "Claudio Prezzi <claudio.prezzi@gmail.com>",
    "Peter van der Walt <peter.plaaswerf@gmail.com>"
  ],
  "repository": {
    "type": "git",
    "url": "git+https://github.com/LaserWeb/lw.comm-server.git"
  },
  "devDependencies": {
    "copyfiles": "^1.2.0",
    "electron": "^1.8.8",
    "electron-builder": "^14.5.3",
    "electron-rebuild": "^1.10.1",
    "ncp": "^2.0.0"
  },
  "dependencies": {
    "chalk": "*",
    "dotenv": "8.x",
    "hdiutil": "0.0.6",
    "moment": "^2.29.1",
    "node-static": "*",
    "request": "*",
    "serialport": "^6.2.2",
    "socket.io": "1.7.4",
    "ws": "1.1.5"
  },
  "bugs": {
    "url": "https://github.com/LaserWeb/lw.comm-server/issues"
  },
  "homepage": "https://laserweb.yurl.ch",
  "main": "server.js",
  "scripts": {
    "start": "echo \"Please run 'npm run dist' to create a local installer, or run 'npm run nightlylinux' or 'npm run nightlywindows' to build distributable installers for each platform\" ",
    "test": "echo \"Error: no test specified\" && exit 0",
    "update_lw4": "git rm app/ -r -f && cp ../LaserWeb4/dist/. app/ -r -u && git add app/",
    "distmac": "npm run copy && build --mac ",
    "distwinx86": "npm run copy && build --win --ia32 ",
    "distwinx64": "npm run copy && build --win --x64",
    "distlinx86": "export USE_SYSTEM_XORRISO=true&& npm run copy && build --linux --ia32 ",
    "distlinx64": "export USE_SYSTEM_XORRISO=true&& npm run copy && build --linux --x64",
    "copy": "ncp ../LaserWeb4/dist/ app/ --limit=6",
    "nightlywindows64": "cd ../LaserWeb4 && git checkout dev-es6 && git pull && npm run installdev && npm run bundle-dev && cd .. && cd lw.comm-server && git checkout electron_bundler && git pull && npm install && npm run distwinx64 && mkdir -p ../LaserWeb4-Binaries/windows && cp -f ./dist/*.exe ../LaserWeb4-Binaries/windows/",
    "nightlywindows32": "cd ../LaserWeb4 && git checkout dev-es6 && git pull && npm run installdev && npm run bundle-dev && cd .. && cd lw.comm-server && git checkout electron_bundler && git pull && npm install && npm run distwinx86 && mkdir -p ../LaserWeb4-Binaries/windows && cp -f ./dist/*.exe ../LaserWeb4-Binaries/windows/",
    "nightlylinux64": "export USE_SYSTEM_XORRISO=true&&cd ../LaserWeb4 && git checkout dev-es6 && git pull && npm run installdev && npm run bundle-dev && cd .. && cd lw.comm-server && git checkout electron_bundler && git pull && npm install && npm run distlinx64 && mkdir -p ../LaserWeb4-Binaries/linux && cp -f ./dist/*.AppImage ../LaserWeb4-Binaries/linux/",
    "nightlylinux32": "export USE_SYSTEM_XORRISO=true&&cd ../LaserWeb4 && git checkout dev-es6 && git pull && npm run installdev && npm run bundle-dev && cd .. && cd lw.comm-server && git checkout electron_bundler && git pull && npm install && npm run distlinx86 && mkdir -p ../LaserWeb4-Binaries/linux && cp -f ./dist/*.AppImage ../LaserWeb4-Binaries/linux/"
  },
  "keywords": [
    "laserweb",
    "cncweb",
    "grbl",
    "smoothieware",
    "tinyg",
    "usb",
    "serial",
    "ethernet",
    "gateway",
    "ESP8266"
  ],
  "engines": {
    "node": ">=10.15.1",
    "npm": ">=6.4.1"
  },
  "build": {
    "appId": "xyz.laserweb",
    "productName": "LaserWeb",
    "asar": true,
    "files": [
      "**/*"
    ],
    "win": {
      "icon": "app/icon.ico"
    },
    "mac": {
      "icon": "app/icons.icns",
      "category": "public.app-category.graphics-design"
    },
    "dmg": {
      "icon": "app/icons.icns",
      "contents": [
        {
          "x": 410,
          "y": 150,
          "type": "link",
          "path": "/Applications"
        },
        {
          "x": 130,
          "y": 150,
          "type": "file"
        }
      ]
    }
  },
  "postinstall": "electron-builder install-app-deps"
}
